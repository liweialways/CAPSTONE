day_of_week == '1' ~ 'weekend',
TRUE ~'weekday')),
month = as.factor(month(stay_dt)),
prod_group_perc = as.factor(case_when(product_type == 'OPAQUE' ~ 'OP/FENC/OTH',
product_type == 'FENCED' ~ 'OP/FENC/OTH',
product_type == 'CORPORATE' ~ 'CORP/GROUP/TACT',
product_type == 'BUSINESS TRAVEL AGENCIES' ~ 'UNF/WHOLE/MEM/BUS',
product_type == 'GROUP' ~ 'CORP/GROUP/TACT',
product_type == 'TACTICAL MARKETING' ~ 'CORP/GROUP/TACT',
product_type == 'MEMBERSHIP MARKETING' ~ 'UNF/WHOLE/MEM/BUS',
product_type == 'OTHER' ~ 'OP/FENC/OTH',
product_type == 'UNFENCED' ~ 'UNF/WHOLE/MEM/BUS',
product_type == 'GOVERNMENT' ~ 'GOVERNMENT',
product_type == 'WHOLESALE' ~ 'UNF/WHOLE/MEM/BUS')),
prod_group_behav = as.factor(case_when(product_type == 'OPAQUE' ~ 'OTH/OPA/FEN',
product_type == 'FENCED' ~ 'OTH/OPA/FEN',
product_type == 'CORPORATE' ~ 'CORP/MEMB/WHOLE',
product_type == 'BUSINESS TRAVEL AGENCIES' ~ 'BTA/UNFEN/CORP/MM',
product_type == 'GROUP' ~ 'GROUP',
product_type == 'TACTICAL MARKETING' ~ 'TACT/WHOLE',
product_type == 'MEMBERSHIP MARKETING' ~ 'BTA/UNFEN/CORP/MM',
product_type == 'OTHER' ~ 'OTH/OPA/FEN',
product_type == 'UNFENCED' ~ 'BTA/UNFEN/CORP/MM',
product_type == 'GOVERNMENT' ~ 'GOVERNMENT',
product_type == 'WHOLESALE' ~ 'TACT/WHOLE')))
h1_train <- hot1[hot1$stay_dt <= (max(hot1$stay_dt) - 21),]
h2_train <- hot2[hot2$stay_dt <= (max(hot2$stay_dt) - 21),]
mod1_3 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_type_cxl_rate+month+prod_group_perc+prod_group_perc*days_prior+month*days_prior, data = h1_train)
summary(mod1_3)
mod1_3 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_type+month+prod_group_perc+prod_group_perc*days_prior+month*days_prior, data = h1_train)
summary(mod1_3)
mod1_3 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_type_cxl_rate+month+prod_group_perc+prod_group_perc*days_prior+month*days_prior, data = h1_train)
summary(mod1_3)
mod1_3 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc+prod_group_perc*days_prior+month*days_prior, data = h1_train)
summary(mod1_3)
# Simple combination of variables: days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc
mod1_1 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_type+month+prod_group_perc, data = h1_train)
summary(mod1_1)
# Simple combination of variables: days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc
mod1_1 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc, data = h1_train)
summary(mod1_1)
# Simple combination of variables: days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc
mod1_1 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_type_cxl_rate+month+prod_group_perc, data = h1_train)
summary(mod1_1)
# Simple combination of variables: days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc
mod1_1 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_type+month+prod_group_perc, data = h1_train)
summary(mod1_1)
# Simple combination of variables: days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc
mod1_1 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_type_cxl_rate+month+prod_group_perc, data = h1_train)
summary(mod1_1)
# Simple combination of variables: days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc
mod1_1 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc, data = h1_train)
summary(mod1_1)
mod1_2 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc+prod_group_perc*days_prior, data = h1_train)
summary(mod1_2)
mod1_3 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_type_cxl_rate+month+prod_group_perc+prod_group_perc*days_prior+month*days_prior+day_type_cxl_rate*days_prior, data = h1_train)
summary(mod1_3)
mod1_3 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc+prod_group_perc*days_prior+month*days_prior+day_of_week*days_prior, data = h1_train)
summary(mod1_3)
x <- rnorm(15)
y <- x + rnorm(15)
predict(lm(y ~ x))
new <- data.frame(x = seq(-3, 3, 0.5))
predict(lm(y ~ x), new, se.fit = TRUE)
pred.w.plim <- predict(lm(y ~ x), new, interval = "prediction")
pred.w.clim <- predict(lm(y ~ x), new, interval = "confidence")
matplot(new$x, cbind(pred.w.clim, pred.w.plim[,-1]),
lty = c(1,2,2,3,3), type = "l", ylab = "predicted y")
x <- rnorm(15)
y <- x + rnorm(15)
predict(lm(y ~ x))
#new <- data.frame(x = seq(-3, 3, 0.5))
#predict(lm(y ~ x), new, se.fit = TRUE)
x <- rnorm(15)
y <- x + rnorm(15)
predict(lm(y ~ x))
#new <- data.frame(x = seq(-3, 3, 0.5))
#predict(lm(y ~ x), new, se.fit = TRUE)
h1_test <- hot1[hot1$stay_dt > (max(hot1$stay_dt) - 21),]
predict(mod1_1, h1_test, se.fit=TRUE)
# Clear environment of variables and functions
rm(list = ls(all = TRUE))
# Clear environmet of packages
if(is.null(sessionInfo()$otherPkgs) == FALSE)lapply(paste("package:", names(sessionInfo()$otherPkgs), sep=""), detach, character.only = TRUE, unload = TRUE)
library(tidyverse)
library(dplyr) # joins
#library(janitor) # pretty cross-tabs
library(kableExtra) # pretty html tables
library(formattable)
library(gridExtra)
library(scales)
library(pastecs)
library(GGally)
library(lubridate)
library(directlabels)
library(Metrics)
# disable scientific notation in R
options(scipen=999)
# load the data files
hot1 <- read_csv('BOOKINGS_ATLCP.csv')
hot2 <- read_csv('BOOKINGS_NYCHA.csv')
# change date fields to date
hot1$stay_dt <- as.Date(hot1$stay_dt, "%m/%d/%Y")
hot1$booking_dt <- as.Date(hot1$booking_dt, "%m/%d/%Y")
hot2$stay_dt <- as.Date(hot2$stay_dt, "%m/%d/%Y")
hot2$booking_dt <- as.Date(hot2$booking_dt, "%m/%d/%Y")
#create field for non-numerical dow
hot1$day_of_week <- as.factor(hot1$dow)
hot2$day_of_week <- as.factor(hot2$dow)
# filter OTB=0, truncate the data by dp, add price, otb_cxl_rate, day_type, month, regrouping tags to the dataset
# Reserve last 3 weeks data as Validation Data and the prior are Training Data
hot1 <- hot1 %>%
filter(OTB!=0, days_prior<33) %>%
mutate(price=OTB_rev/OTB, OTB_cxl_rate = OTB_to_be_cxl/OTB,
day_type = as.factor(case_when(day_of_week == '7' ~ 'weekend',
day_of_week == '1' ~ 'weekend',
TRUE ~'weekday')),
month = as.factor(month(stay_dt)),
prod_group_perc = as.factor(case_when(product_type == 'OPAQUE' ~ 'OP/FENC',
product_type == 'FENCED' ~ 'OP/FENC',
product_type == 'CORPORATE' ~ 'CORP/BUS',
product_type == 'BUSINESS TRAVEL AGENCIES' ~ 'CORP/BUS',
product_type == 'GROUP' ~ 'GROUP',
product_type == 'MEMBERSHIP MARKETING' ~ 'MEM/OTHER',
product_type == 'OTHER' ~ 'MEM/OTHER',
product_type == 'UNFENCED' ~ 'GOV/UNFENC',
product_type == 'GOVERNMENT' ~ 'GOV/UNFENC')),
prod_group_behav = as.factor(case_when(product_type == 'OPAQUE' ~ 'OP/FENC/OTH',
product_type == 'FENCED' ~ 'OP/FENC/OTH',
product_type == 'CORPORATE' ~ 'CORPORATE',
product_type == 'BUSINESS TRAVEL AGENCIES' ~ 'GOV/BUS/MEM',
product_type == 'GROUP' ~ 'GROUP',
product_type == 'MEMBERSHIP MARKETING' ~ 'GOV/BUS/MEM',
product_type == 'OTHER' ~ 'OP/FENC/OTH',
product_type == 'UNFENCED' ~ 'UNFENCED',
product_type == 'GOVERNMENT' ~ 'GOV/BUS/MEM')),
prod_group_cxl_rate = as.factor(case_when(product_type == 'OPAQUE' ~ 'GOV/UNFEN/OP',
product_type == 'FENCED' ~ 'CORP/FEN/MEM',
product_type == 'CORPORATE' ~ 'CORP/FEN/MEM',
product_type == 'BUSINESS TRAVEL AGENCIES' ~ 'OTH/BTA',
product_type == 'GROUP' ~ 'GROUP',
product_type == 'MEMBERSHIP MARKETING' ~ 'CORP/FEN/MEM',
product_type == 'OTHER' ~ 'OTH/BTA',
product_type == 'UNFENCED' ~ 'GOV/UNFEN/OP',
product_type == 'GOVERNMENT' ~ 'GOV/UNFEN/OP')),
day_type_cxl_rate = as.factor(case_when(day_of_week=="1"~"SUN",
day_of_week=="6"~"FRI/SAT",
day_of_week=="7"~"FRI/SAT",
TRUE ~ "MON/TUE/WED/THU")))
hot2 <- hot2 %>%
filter(OTB!=0, days_prior<32) %>%
mutate(price=OTB_rev/OTB, OTB_cxl_rate = OTB_to_be_cxl/OTB,
day_type = as.factor(case_when(day_of_week == '7' ~ 'weekend',
day_of_week == '1' ~ 'weekend',
TRUE ~'weekday')),
month = as.factor(month(stay_dt)),
prod_group_perc = as.factor(case_when(product_type == 'OPAQUE' ~ 'OP/FENC/OTH',
product_type == 'FENCED' ~ 'OP/FENC/OTH',
product_type == 'CORPORATE' ~ 'CORP/GROUP/TACT',
product_type == 'BUSINESS TRAVEL AGENCIES' ~ 'UNF/WHOLE/MEM/BUS',
product_type == 'GROUP' ~ 'CORP/GROUP/TACT',
product_type == 'TACTICAL MARKETING' ~ 'CORP/GROUP/TACT',
product_type == 'MEMBERSHIP MARKETING' ~ 'UNF/WHOLE/MEM/BUS',
product_type == 'OTHER' ~ 'OP/FENC/OTH',
product_type == 'UNFENCED' ~ 'UNF/WHOLE/MEM/BUS',
product_type == 'GOVERNMENT' ~ 'GOVERNMENT',
product_type == 'WHOLESALE' ~ 'UNF/WHOLE/MEM/BUS')),
prod_group_behav = as.factor(case_when(product_type == 'OPAQUE' ~ 'OTH/OPA/FEN',
product_type == 'FENCED' ~ 'OTH/OPA/FEN',
product_type == 'CORPORATE' ~ 'CORP/MEMB/WHOLE',
product_type == 'BUSINESS TRAVEL AGENCIES' ~ 'BTA/UNFEN/CORP/MM',
product_type == 'GROUP' ~ 'GROUP',
product_type == 'TACTICAL MARKETING' ~ 'TACT/WHOLE',
product_type == 'MEMBERSHIP MARKETING' ~ 'BTA/UNFEN/CORP/MM',
product_type == 'OTHER' ~ 'OTH/OPA/FEN',
product_type == 'UNFENCED' ~ 'BTA/UNFEN/CORP/MM',
product_type == 'GOVERNMENT' ~ 'GOVERNMENT',
product_type == 'WHOLESALE' ~ 'TACT/WHOLE')))
h1_train <- hot1[hot1$stay_dt <= (max(hot1$stay_dt) - 21),]
h2_train <- hot2[hot2$stay_dt <= (max(hot2$stay_dt) - 21),]
colnames(h1_train)
h1_train %>%
select(days_prior, cummulative_cxl_bookings, cummulative_gross_bookings, cummulative_gross_rev, OTB, OTB_rev, OTB_to_be_cxl, price, daily_gross_bookings, daily_cxl_bookings, daily_net_bookings)%>%
cor()
# Simple combination of variables: days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc
mod1_1 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc, data = h1_train)
summary(mod1_1)
mod1_2 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc+prod_group_perc*days_prior, data = h1_train)
summary(mod1_2)
mod1_3 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc+prod_group_perc*days_prior+month*days_prior, data = h1_train)
summary(mod1_3)
#predict(lm(y ~ x), new, se.fit = TRUE)
h1_test <- hot1[hot1$stay_dt > (max(hot1$stay_dt) - 21),]
pred_1_1 <- predict(mod1_1, h1_test, se.fit=TRUE)
x <- rnorm(15)
y <- x + rnorm(15)
predict(lm(y ~ x))
new <- data.frame(x = seq(-3, 3, 0.5))
predict(lm(y ~ x), new, se.fit = TRUE)
x <- rnorm(15)
y <- x + rnorm(15)
mod <- lm(y ~ x)
new <- data.frame(x = seq(-3, 3, 0.5))
predict(mod, new, se.fit = TRUE)
x <- rnorm(15)
y <- x + rnorm(15)
mod <- lm(y ~ x)
new <- data.frame(x = seq(-3, 3, 0.5), a=seq(1,2,1))
x <- rnorm(15)
y <- x + rnorm(15)
mod <- lm(y ~ x)
new <- data.frame(x = seq(-3, 3, 1), a=seq(1,2,1,2,3,2,6))
x <- rnorm(15)
y <- x + rnorm(15)
mod <- lm(y ~ x)
new <- data.frame(x = seq(-3, 3, 1), a=c(1,2,1,2,3,2,6))
predict(mod, new, se.fit = TRUE)
x <- rnorm(15)
y <- x + rnorm(15)
mod <- lm(y ~ x)
new <- data.frame(x = seq(-3, 3, 1))#, a=c(1,2,1,2,3,2,6))
predict(mod, new, se.fit = TRUE)
x <- rnorm(15)
y <- x + rnorm(15)
mod <- lm(y ~ x)
new <- data.frame(x = seq(-3, 3, 1))#, a=c(1,2,1,2,3,2,6))
predict(mod, new, se.fit = TRUE)
x <- rnorm(15)
y <- x + rnorm(15)
mod <- lm(y ~ x)
new <- data.frame(x = seq(-3, 3, 1), a=c(1,2,1,2,3,2,6))
predict(mod, new, se.fit = TRUE)
#predict(lm(y ~ x), new, se.fit = TRUE)
h1_test <- hot1[hot1$stay_dt > (max(hot1$stay_dt) - 21),]
h1_test$pred1_1 <-  predict(mod1_1, h1_test, se.fit=TRUE)
predict(mod1_1, h1_test, se.fit=TRUE)
predict(mod1_1, h1_test, se.fit=TRUE)$fit
#predict(lm(y ~ x), new, se.fit = TRUE)
h1_test <- hot1[hot1$stay_dt > (max(hot1$stay_dt) - 21),]
h1_test$pred1_1 <-  predict(mod1_1, h1_test, se.fit=TRUE)$fit
View(h1_test)
h1_test <- hot1[hot1$stay_dt > (max(hot1$stay_dt) - 21),]
h1_test$predict_cxl_rate <-  predict(mod1_1, h1_test, se.fit=TRUE)$fit
h1_test$fcst_svv <- h1_test$OTB-OTB * h1_test$predict_cxl_rate
h1_test <- hot1[hot1$stay_dt > (max(hot1$stay_dt) - 21),]
h1_test$predict_cxl_rate <-  predict(mod1_1, h1_test, se.fit=TRUE)$fit
h1_test$fcst_svv <- h1_test$OTB - h1_test$OTB * h1_test$predict_cxl_rate
View(h1_test)
# MAE
h1_test %>%
filter(days_prior!=0) %>%
mutate(dp_range = case_when(days_prior >=1 & days_prior<=7 ~ '1_7',
days_prior >=8 & days_prior<=14 ~ '8_14',
days_prior >=15 & days_prior<=21 ~ '15_21',
days_prior >=22 & days_prior<=28 ~ '22_28',
days_prior >=29 ~ '29_32')) %>%
group_by(dp_range, days_prior) %>%
summarise(meanAE = mae(OTB_to_survive, fcst_svv))
# MAPE: the OTB_to_survive in GOVERNMENT contains 0 values, so MAPE is INF
h1_test %>%
filter(days_prior!=0, OTB_to_survive!=0) %>%
mutate(dp_range = case_when(days_prior >=1 & days_prior<=7 ~ '1_7',
days_prior >=8 & days_prior<=14 ~ '8_14',
days_prior >=15 & days_prior<=21 ~ '15_21',
days_prior >=22 & days_prior<=28 ~ '22_28',
days_prior >=29 ~ '29_32')) %>%
group_by(dp_range, days_prior) %>%
summarise(meanAPE = mape(OTB_to_survive, fcst_svv))
# MASE
h1_test %>%
filter(days_prior!=0) %>%
mutate(dp_range = case_when(days_prior >=1 & days_prior<=7 ~ '1_7',
days_prior >=8 & days_prior<=14 ~ '8_14',
days_prior >=15 & days_prior<=21 ~ '15_21',
days_prior >=22 & days_prior<=28 ~ '22_28',
days_prior >=29 ~ '29_32'),
abs_diff_1=abs(OTB_to_survive-fcst_svv),
abs_diff_2=abs(OTB_to_survive-avg_svv_rt*OTB)) %>%
group_by(dp_range, days_prior) %>%
summarise(meanASE = sum(abs_diff_1)/sum(abs_diff_2))
# MASE
## Avg survival rate:
avg_svv_rt <- sum(h1_train$OTB_to_survive)/sum(h1_train$OTB)
h1_test %>%
filter(days_prior!=0) %>%
mutate(dp_range = case_when(days_prior >=1 & days_prior<=7 ~ '1_7',
days_prior >=8 & days_prior<=14 ~ '8_14',
days_prior >=15 & days_prior<=21 ~ '15_21',
days_prior >=22 & days_prior<=28 ~ '22_28',
days_prior >=29 ~ '29_32'),
abs_diff_1=abs(OTB_to_survive-fcst_svv),
abs_diff_2=abs(OTB_to_survive-avg_svv_rt*OTB)) %>%
group_by(dp_range, days_prior) %>%
summarise(meanASE = sum(abs_diff_1)/sum(abs_diff_2))
h2_train %>%
select(days_prior, cummulative_cxl_bookings, cummulative_gross_bookings, cummulative_gross_rev, OTB, OTB_rev, OTB_to_be_cxl, price, daily_gross_bookings, daily_cxl_bookings, daily_net_bookings)%>%
cor()
# Simple combination of variables: days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc
mod2_1 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc, data = h1_train)
summary(mod2_1)
# Simple combination of variables: days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc
mod2_1 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc, data = h2_train)
summary(mod2_1)
# Simple combination of variables: days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc
mod2_1 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_bahav, data = h2_train)
# Simple combination of variables: days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc
mod2_1 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_cxl_rate, data = h2_train)
colnames(h2_train)
# Simple combination of variables: days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc
mod2_1 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_behav, data = h2_train)
summary(mod2_1)
# Simple combination of variables: days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc
mod2_1 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc, data = h2_train)
summary(mod2_1)
h2_train %>%
select(day_of_week, days_prior, OTB, OTB_to_be_cxl) %>%
filter(days_prior <= 31) %>%
group_by(days_prior, day_of_week) %>%
summarise(avg_cxl_rate = mean(OTB_to_be_cxl)/mean(OTB)) %>%
ggplot()+
geom_line(aes(x=days_prior, y=avg_cxl_rate, color = day_of_week))+
geom_dl(aes(label = day_of_week, x=days_prior, y=avg_cxl_rate, color = day_of_week), method = list(dl.combine("first.points", "last.points"), cex=0.5))
# filter OTB=0, truncate the data by dp, add price, otb_cxl_rate, day_type, month, regrouping tags to the dataset
# Reserve last 3 weeks data as Validation Data and the prior are Training Data
hot1 <- hot1 %>%
filter(OTB!=0, days_prior<33) %>%
mutate(price=OTB_rev/OTB, OTB_cxl_rate = OTB_to_be_cxl/OTB,
day_type = as.factor(case_when(day_of_week == '7' ~ 'weekend',
day_of_week == '1' ~ 'weekend',
TRUE ~'weekday')),
month = as.factor(month(stay_dt)),
prod_group_perc = as.factor(case_when(product_type == 'OPAQUE' ~ 'OP/FENC',
product_type == 'FENCED' ~ 'OP/FENC',
product_type == 'CORPORATE' ~ 'CORP/BUS',
product_type == 'BUSINESS TRAVEL AGENCIES' ~ 'CORP/BUS',
product_type == 'GROUP' ~ 'GROUP',
product_type == 'MEMBERSHIP MARKETING' ~ 'MEM/OTHER',
product_type == 'OTHER' ~ 'MEM/OTHER',
product_type == 'UNFENCED' ~ 'GOV/UNFENC',
product_type == 'GOVERNMENT' ~ 'GOV/UNFENC')),
prod_group_behav = as.factor(case_when(product_type == 'OPAQUE' ~ 'OP/FENC/OTH',
product_type == 'FENCED' ~ 'OP/FENC/OTH',
product_type == 'CORPORATE' ~ 'CORPORATE',
product_type == 'BUSINESS TRAVEL AGENCIES' ~ 'GOV/BUS/MEM',
product_type == 'GROUP' ~ 'GROUP',
product_type == 'MEMBERSHIP MARKETING' ~ 'GOV/BUS/MEM',
product_type == 'OTHER' ~ 'OP/FENC/OTH',
product_type == 'UNFENCED' ~ 'UNFENCED',
product_type == 'GOVERNMENT' ~ 'GOV/BUS/MEM')),
prod_group_cxl_rate = as.factor(case_when(product_type == 'OPAQUE' ~ 'GOV/UNFEN/OP',
product_type == 'FENCED' ~ 'CORP/FEN/MEM',
product_type == 'CORPORATE' ~ 'CORP/FEN/MEM',
product_type == 'BUSINESS TRAVEL AGENCIES' ~ 'OTH/BTA',
product_type == 'GROUP' ~ 'GROUP',
product_type == 'MEMBERSHIP MARKETING' ~ 'CORP/FEN/MEM',
product_type == 'OTHER' ~ 'OTH/BTA',
product_type == 'UNFENCED' ~ 'GOV/UNFEN/OP',
product_type == 'GOVERNMENT' ~ 'GOV/UNFEN/OP')),
day_type_cxl_rate = as.factor(case_when(day_of_week=="1"~"SUN",
day_of_week=="6"~"FRI/SAT",
day_of_week=="7"~"FRI/SAT",
TRUE ~ "MON/TUE/WED/THU")))
hot2 <- hot2 %>%
filter(OTB!=0, days_prior<32) %>%
mutate(price=OTB_rev/OTB, OTB_cxl_rate = OTB_to_be_cxl/OTB,
day_type = as.factor(case_when(day_of_week == '7' ~ 'weekend',
day_of_week == '1' ~ 'weekend',
TRUE ~'weekday')),
month = as.factor(month(stay_dt)),
prod_group_perc = as.factor(case_when(product_type == 'OPAQUE' ~ 'OP/FENC/OTH',
product_type == 'FENCED' ~ 'OP/FENC/OTH',
product_type == 'CORPORATE' ~ 'CORP/GROUP/TACT',
product_type == 'BUSINESS TRAVEL AGENCIES' ~ 'UNF/WHOLE/MEM/BUS',
product_type == 'GROUP' ~ 'CORP/GROUP/TACT',
product_type == 'TACTICAL MARKETING' ~ 'CORP/GROUP/TACT',
product_type == 'MEMBERSHIP MARKETING' ~ 'UNF/WHOLE/MEM/BUS',
product_type == 'OTHER' ~ 'OP/FENC/OTH',
product_type == 'UNFENCED' ~ 'UNF/WHOLE/MEM/BUS',
product_type == 'GOVERNMENT' ~ 'GOVERNMENT',
product_type == 'WHOLESALE' ~ 'UNF/WHOLE/MEM/BUS')),
prod_group_behav = as.factor(case_when(product_type == 'OPAQUE' ~ 'OTH/OPA/FEN',
product_type == 'FENCED' ~ 'OTH/OPA/FEN',
product_type == 'CORPORATE' ~ 'CORP/MEMB/WHOLE',
product_type == 'BUSINESS TRAVEL AGENCIES' ~ 'BTA/UNFEN/CORP/MM',
product_type == 'GROUP' ~ 'GROUP',
product_type == 'TACTICAL MARKETING' ~ 'TACT/WHOLE',
product_type == 'MEMBERSHIP MARKETING' ~ 'BTA/UNFEN/CORP/MM',
product_type == 'OTHER' ~ 'OTH/OPA/FEN',
product_type == 'UNFENCED' ~ 'BTA/UNFEN/CORP/MM',
product_type == 'GOVERNMENT' ~ 'GOVERNMENT',
product_type == 'WHOLESALE' ~ 'TACT/WHOLE')),
day_type_cxl_rate = as.factor(case_when(day_of_week=="1"~"SUN",
day_of_week=="6"~"FRI/SAT",
day_of_week=="7"~"FRI/SAT",
TRUE ~ "MON/TUE/WED/THU")))
h1_train <- hot1[hot1$stay_dt <= (max(hot1$stay_dt) - 21),]
h2_train <- hot2[hot2$stay_dt <= (max(hot2$stay_dt) - 21),]
h2_train %>%
select(days_prior, cummulative_cxl_bookings, cummulative_gross_bookings, cummulative_gross_rev, OTB, OTB_rev, OTB_to_be_cxl, price, daily_gross_bookings, daily_cxl_bookings, daily_net_bookings)%>%
cor()
# Simple combination of variables: days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc
mod2_1 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_type_cxl_rate+month+prod_group_perc, data = h2_train)
summary(mod2_1)
# Simple combination of variables: days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc
mod2_1 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc, data = h2_train)
summary(mod2_1)
# Simple combination of variables: days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc
mod2_1 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_type+month+prod_group_perc, data = h2_train)
summary(mod2_1)
# Simple combination of variables: days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc
mod2_1 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_type_cxl_rate+month+prod_group_perc, data = h2_train)
summary(mod2_1)
# Simple combination of variables: days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc
mod2_1 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc, data = h2_train)
summary(mod2_1)
mod1_2 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc+prod_group_perc*days_prior, data = h2_train)
summary(mod1_2)
mod2_2 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc+prod_group_perc*days_prior, data = h2_train)
summary(mod2_2)
mod2_3 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc+prod_group_perc*days_prior+month*days_prior, data = h1_train)
summary(mod2_3)
mod2_3 <- lm(formula=OTB_cxl_rate~days_prior+cummulative_cxl_bookings+daily_gross_bookings+daily_cxl_bookings+price+day_of_week+month+prod_group_perc+prod_group_perc*days_prior+month*days_prior, data = h2_train)
summary(mod2_3)
# MAE
mod1_1_mae <- h1_test %>%
filter(days_prior!=0) %>%
mutate(dp_range = case_when(days_prior >=1 & days_prior<=7 ~ '1_7',
days_prior >=8 & days_prior<=14 ~ '8_14',
days_prior >=15 & days_prior<=21 ~ '15_21',
days_prior >=22 & days_prior<=28 ~ '22_28',
days_prior >=29 ~ '29_32')) %>%
group_by(dp_range, days_prior) %>%
summarise(meanAE = mae(OTB_to_survive, fcst_svv))
# MAPE: the OTB_to_survive in GOVERNMENT contains 0 values, so MAPE is INF
mod1_1_mape <- h1_test %>%
filter(days_prior!=0, OTB_to_survive!=0) %>%
mutate(dp_range = case_when(days_prior >=1 & days_prior<=7 ~ '1_7',
days_prior >=8 & days_prior<=14 ~ '8_14',
days_prior >=15 & days_prior<=21 ~ '15_21',
days_prior >=22 & days_prior<=28 ~ '22_28',
days_prior >=29 ~ '29_32')) %>%
group_by(dp_range, days_prior) %>%
summarise(meanAPE = mape(OTB_to_survive, fcst_svv))
# MASE
## Avg survival rate:
avg_svv_rt <- sum(h1_train$OTB_to_survive)/sum(h1_train$OTB)
mod1_1_mase <- h1_test %>%
filter(days_prior!=0) %>%
mutate(dp_range = case_when(days_prior >=1 & days_prior<=7 ~ '1_7',
days_prior >=8 & days_prior<=14 ~ '8_14',
days_prior >=15 & days_prior<=21 ~ '15_21',
days_prior >=22 & days_prior<=28 ~ '22_28',
days_prior >=29 ~ '29_32'),
abs_diff_1=abs(OTB_to_survive-fcst_svv),
abs_diff_2=abs(OTB_to_survive-avg_svv_rt*OTB)) %>%
group_by(dp_range, days_prior) %>%
summarise(meanASE = sum(abs_diff_1)/sum(abs_diff_2))
# MAE, MAPE, MASE for mod1_1
left_join(left_join(mod1_1_mae,mod1_1_mape, by=c("dp_range", "days_prior")), mod1_1_mase, by=c("dp_range", "days_prior")) %>%
select(dp_range, days_prior, meanAE, meanAPE, meanASE)
# MAE, MAPE, MASE for mod1_1
left_join(left_join(mod1_1_mae,mod1_1_mape, by=c("dp_range")), mod1_1_mase, by=c("dp_range")) %>%
select(dp_range, meanAE, meanAPE, meanASE)
# MAE
mod1_1_mae <- h1_test %>%
filter(days_prior!=0) %>%
mutate(dp_range = case_when(days_prior >=1 & days_prior<=7 ~ '1_7',
days_prior >=8 & days_prior<=14 ~ '8_14',
days_prior >=15 & days_prior<=21 ~ '15_21',
days_prior >=22 & days_prior<=28 ~ '22_28',
days_prior >=29 ~ '29_32')) %>%
group_by(dp_range) %>%
summarise(meanAE = mae(OTB_to_survive, fcst_svv))
# MAE
mod1_1_mae <- h1_test %>%
filter(days_prior!=0) %>%
mutate(dp_range = case_when(days_prior >=1 & days_prior<=7 ~ '1_7',
days_prior >=8 & days_prior<=14 ~ '8_14',
days_prior >=15 & days_prior<=21 ~ '15_21',
days_prior >=22 & days_prior<=28 ~ '22_28',
days_prior >=29 ~ '29_32')) %>%
group_by(dp_range) %>%
summarise(meanAE = mae(OTB_to_survive, fcst_svv))
mod1_1_mae
# MAPE: the OTB_to_survive in GOVERNMENT contains 0 values, so MAPE is INF
mod1_1_mape <- h1_test %>%
filter(days_prior!=0, OTB_to_survive!=0) %>%
mutate(dp_range = case_when(days_prior >=1 & days_prior<=7 ~ '1_7',
days_prior >=8 & days_prior<=14 ~ '8_14',
days_prior >=15 & days_prior<=21 ~ '15_21',
days_prior >=22 & days_prior<=28 ~ '22_28',
days_prior >=29 ~ '29_32')) %>%
group_by(dp_range) %>%
summarise(meanAPE = mape(OTB_to_survive, fcst_svv))
mod1_1_mape
# MASE
## Avg survival rate:
avg_svv_rt <- sum(h1_train$OTB_to_survive)/sum(h1_train$OTB)
mod1_1_mase <- h1_test %>%
filter(days_prior!=0) %>%
mutate(dp_range = case_when(days_prior >=1 & days_prior<=7 ~ '1_7',
days_prior >=8 & days_prior<=14 ~ '8_14',
days_prior >=15 & days_prior<=21 ~ '15_21',
days_prior >=22 & days_prior<=28 ~ '22_28',
days_prior >=29 ~ '29_32'),
abs_diff_1=abs(OTB_to_survive-fcst_svv),
abs_diff_2=abs(OTB_to_survive-avg_svv_rt*OTB)) %>%
group_by(dp_range) %>%
summarise(meanASE = sum(abs_diff_1)/sum(abs_diff_2))
mod1_1_mase
# MAE, MAPE, MASE for mod1_1
left_join(left_join(mod1_1_mae,mod1_1_mape, by=c("dp_range")), mod1_1_mase, by=c("dp_range"))
