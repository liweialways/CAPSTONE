product_type == 'BUSINESS TRAVEL AGENCIES' ~ 'UNF/MEM/BUS',
product_type == 'GROUP' ~ 'GRP',
product_type == 'MEMBERSHIP' ~ 'UNF/MEM/BUS',
product_type == 'OTHER' ~ 'GOV/OTH',
product_type == 'UNFENCED' ~ 'UNF/MEM/BUS',
product_type == 'GOVERNMENT' ~ 'GOV/OTH'))
#truncate days prior to 32
h1_train_3 <- h1_train %>%
filter(days_prior <= 32)
head(h1_train_3)
#Create this group
h1_train_3 <- h1_train %>%
mutate(prod_group_cxl_rate = case_when(product_type == 'OPAQUE' ~ 'OP',
product_type == 'FENCED' ~ 'FENC/CORP',
product_type == 'CORPORATE' ~ 'FENC/CORP',
product_type == 'BUSINESS TRAVEL AGENCIES' ~ 'UNF/MEM/BUS',
product_type == 'GROUP' ~ 'GRP',
product_type == 'MEMBERSHIP' ~ 'UNF/MEM/BUS',
product_type == 'OTHER' ~ 'GOV/OTH',
product_type == 'UNFENCED' ~ 'UNF/MEM/BUS',
product_type == 'GOVERNMENT' ~ 'GOV/OTH'))
#truncate days prior to 32
h1_train_3 <- h1_train_3 %>%
filter(days_prior <= 32)
head(h1_train_3)
# cummulative_cxl_bookings,cummulative_gross_bookings,cummulative_gross_rev,OTB,OTB_rev are highly correlated. So the models will use one of them each time.
# h1_train_3: product_type, dow, days_prior, one of (cummulative_gross_bookings,cummulative_gross_rev,cummulative_cxl_bookings,cummulative_cxl_rev,OTB,OTB_rev)
h1_train_3$month <- month(h1_train_3$stay_dt)
mod1 <- lm(OTB_to_be_cxl~days_prior+day_of_week+month+prod_group_cxl_rate+cummulative_cxl_bookings, data=h1_train_3)
mod2 <- lm(OTB_to_be_cxl~days_prior+day_of_week+month+prod_group_cxl_rate+cummulative_gross_bookings, data=h1_train_3)
mod3 <- lm(OTB_to_be_cxl~days_prior+day_of_week+month+prod_group_cxl_rate+cummulative_gross_rev, data=h1_train_3)
mod4 <- lm(OTB_to_be_cxl~days_prior+day_of_week+month+prod_group_cxl_rate+OTB, data=h1_train_3)
summary(mod1)
summary(mod2)
summary(mod3)
summary(mod4)
#look into product type
h2_train %>%
select(product_type,  OTB, OTB_to_be_cxl) %>%
group_by(product_type) %>%
summarise(avg_bookings = mean(OTB),
avg_cancels = mean(OTB_to_be_cxl),
perc_cxl = (mean(OTB_to_be_cxl)/mean(OTB))*100) %>%
kable(align = c("c", "c", "c")) %>%
kable_styling(bootstrap_options = c("striped", "condensed", "bordered")) %>%
column_spec(1:3, color = "#000000")
#make these groups
h2_train <- h2_train %>%
mutate(prod_group_perc = case_when(product_type == 'OPAQUE' ~ 'OP/FENC/OTH',
product_type == 'FENCED' ~ 'OP/FENC/OTH',
product_type == 'CORPORATE' ~ 'CORP/GROUP/TACT',
product_type == 'BUSINESS TRAVEL AGENCIES' ~ 'UNF/WHOLE/MEM/BUS',
product_type == 'GROUP' ~ 'CORP/GROUP/TACT',
product_type == 'TACTICAL MARKETING' ~ 'CORP/GROUP/TACT',
product_type == 'MEMBERSHIP MARKETING' ~ 'UNF/WHOLE/MEM/BUS',
product_type == 'OTHER' ~ 'OP/FENC/OTH',
product_type == 'UNFENCED' ~ 'UNF/WHOLE/MEM/BUS',
product_type == 'GOVERNMENT' ~ 'GOVERNMENT',
product_type == 'WHOLESALE' ~ 'UNF/WHOLE/MEM/BUS'))
#make these groups
h2_train_1 <- h2_train %>%
mutate(prod_group_perc = case_when(product_type == 'OPAQUE' ~ 'OP/FENC/OTH',
product_type == 'FENCED' ~ 'OP/FENC/OTH',
product_type == 'CORPORATE' ~ 'CORP/GROUP/TACT',
product_type == 'BUSINESS TRAVEL AGENCIES' ~ 'UNF/WHOLE/MEM/BUS',
product_type == 'GROUP' ~ 'CORP/GROUP/TACT',
product_type == 'TACTICAL MARKETING' ~ 'CORP/GROUP/TACT',
product_type == 'MEMBERSHIP MARKETING' ~ 'UNF/WHOLE/MEM/BUS',
product_type == 'OTHER' ~ 'OP/FENC/OTH',
product_type == 'UNFENCED' ~ 'UNF/WHOLE/MEM/BUS',
product_type == 'GOVERNMENT' ~ 'GOVERNMENT',
product_type == 'WHOLESALE' ~ 'UNF/WHOLE/MEM/BUS'))
#above by day of week
h2_train %>%
select(product_type, day_of_week, OTB, OTB_to_be_cxl) %>%
group_by(product_type, day_of_week) %>%
summarise(avg_bookings = mean(OTB),
avg_cancels = mean(OTB_to_be_cxl)) %>%
arrange(desc(avg_bookings)) %>%
kable(align = c("c", "c", "c", "c")) %>%
kable_styling(bootstrap_options = c("striped", "condensed", "bordered")) %>%
column_spec(1:4, color = "#000000")
#bookings by day of week and product type
h2_train %>%
select(day_of_week, product_type, OTB) %>%
group_by(day_of_week, product_type) %>%
summarise(avg_bookings = mean(OTB)) %>%
ggplot(aes(x = reorder(day_of_week, -avg_bookings), y = avg_bookings, fill = product_type)) +
geom_bar(stat = "identity", width = .8, color = "white", position = "dodge") +
theme_minimal() +
theme(axis.title = element_blank(),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_text(size = 11, face = "bold"),
axis.text.x = element_text(size = 11, face = "bold")) +
ggtitle("Average # of Bookings by DOW and Product Type")
#above by cancellations
h2_train %>%
select(day_of_week, product_type, OTB_to_be_cxl) %>%
group_by(day_of_week, product_type) %>%
summarise(avg_cxl = mean(OTB_to_be_cxl)) %>%
ggplot(aes(x = reorder(day_of_week, -avg_cxl), y = avg_cxl, fill = product_type)) +
geom_bar(stat = "identity", width = .8, color = "white", position = "dodge") +
theme_minimal() +
theme(axis.title = element_blank(),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_text(size = 11, face = "bold"),
axis.text.x = element_text(size = 11, face = "bold")) +
ggtitle("Average # of CXLs by DOW and Product Type")
h2_train %>%
select(product_type, days_prior, cummulative_cxl_bookings, cummulative_gross_bookings) %>%
filter(cummulative_gross_bookings != 0) %>%
mutate(cxl_rate = cummulative_cxl_bookings/cummulative_gross_bookings) %>%
group_by(days_prior, product_type) %>%
summarise(avg_cxl_rate = mean(cxl_rate)) %>%
ggplot()+
geom_line(aes(x=days_prior, y=avg_cxl_rate, color = product_type))+
geom_dl(aes(label = product_type, x=days_prior, y=avg_cxl_rate, color = product_type), method = list(dl.combine("first.points", "last.points"), cex=0.5))
h2_train %>%
select(days_prior, daily_cxl_bookings) %>%
group_by(days_prior) %>%
summarize(num = sum(daily_cxl_bookings)) %>%
kable(align = c("c", "c", "c", "c")) %>%
kable_styling(bootstrap_options = c("striped", "condensed", "bordered")) %>%
column_spec(1:2, color = "#000000")
h2_train %>%
select(product_type, days_prior, cummulative_cxl_bookings, cummulative_gross_bookings) %>%
filter(cummulative_gross_bookings != 0) %>%
filter(days_prior <= 31) %>%
mutate(cxl_rate = cummulative_cxl_bookings/cummulative_gross_bookings) %>%
group_by(days_prior, product_type) %>%
summarise(avg_cxl_rate = mean(cxl_rate)) %>%
ggplot()+
geom_line(aes(x=days_prior, y=avg_cxl_rate, color = product_type))+
geom_dl(aes(label = product_type, x=days_prior, y=avg_cxl_rate, color = product_type), method = list(dl.combine("first.points", "last.points"), cex=0.5))
# number of cancellations in each product type
h1_train %>%
select(product_type, daily_cxl_bookings) %>%
group_by(product_type) %>%
summarize(num = sum(daily_cxl_bookings)) %>%
kable(align = c("c", "c", "c", "c")) %>%
kable_styling(bootstrap_options = c("striped", "condensed", "bordered")) %>%
column_spec(1:2, color = "#000000")
# number of cancellations in each product type
h2_train %>%
select(product_type, daily_cxl_bookings) %>%
group_by(product_type) %>%
summarize(num = sum(daily_cxl_bookings)) %>%
kable(align = c("c", "c", "c", "c")) %>%
kable_styling(bootstrap_options = c("striped", "condensed", "bordered")) %>%
column_spec(1:2, color = "#000000")
# number of cancellations in each product type
h2_train %>%
select(product_type, daily_cxl_bookings) %>%
group_by(product_type) %>%
summarize(num = sum(daily_cxl_bookings)) %>%
kable(align = c("c", "c", "c", "c")) %>%
kable_styling(bootstrap_options = c("striped", "condensed", "bordered")) %>%
column_spec(1:2, color = "#000000")
# number of cancellations in each product type
h2_train %>%
select(product_type, daily_cxl_bookings) %>%
group_by(product_type) %>%
summarize(num = sum(daily_cxl_bookings)) %>%
kable(align = c("c", "c", "c", "c")) %>%
kable_styling(bootstrap_options = c("striped", "condensed", "bordered")) %>%
column_spec(1:2, color = "#000000")
#make this a group
h2_train_2 <- h2_train %>%
mutate(prod_group_behav = case_when(product_type == 'OPAQUE' ~ 'OP/FENC',
product_type == 'FENCED' ~ 'OP/FENC',
product_type == 'CORPORATE' ~ 'UNF/WHOLE/MEM/GROU/CORP',
product_type == 'BUSINESS TRAVEL AGENCIES' ~ 'BUSINESS TRAVEL AGENCIES',
product_type == 'GROUP' ~ 'UNF/WHOLE/MEM/GROU/CORP',
product_type == 'TACTICAL MARKETING' ~ 'OTH/TACT',
product_type == 'MEMBERSHIP MARKETING' ~ 'UNF/WHOLE/MEM/GROU/CORP',
product_type == 'OTHER' ~ 'OTH/TACT',
product_type == 'UNFENCED' ~ 'UNF/WHOLE/MEM/GROU/CORP',
product_type == 'GOVERNMENT' ~ 'GOVERNMENT',
product_type == 'WHOLESALE' ~ 'UNF/WHOLE/MEM/GROU/CORP'))
#truncate days prior to 32
h2_train <- h2_train %>%
filter(days_prior <= 31)
#make this a group
h2_train_2 <- h2_train %>%
mutate(prod_group_behav = case_when(product_type == 'OPAQUE' ~ 'OP/FENC',
product_type == 'FENCED' ~ 'OP/FENC',
product_type == 'CORPORATE' ~ 'UNF/WHOLE/MEM/GROU/CORP',
product_type == 'BUSINESS TRAVEL AGENCIES' ~ 'BUSINESS TRAVEL AGENCIES',
product_type == 'GROUP' ~ 'UNF/WHOLE/MEM/GROU/CORP',
product_type == 'TACTICAL MARKETING' ~ 'OTH/TACT',
product_type == 'MEMBERSHIP MARKETING' ~ 'UNF/WHOLE/MEM/GROU/CORP',
product_type == 'OTHER' ~ 'OTH/TACT',
product_type == 'UNFENCED' ~ 'UNF/WHOLE/MEM/GROU/CORP',
product_type == 'GOVERNMENT' ~ 'GOVERNMENT',
product_type == 'WHOLESALE' ~ 'UNF/WHOLE/MEM/GROU/CORP'))
#truncate days prior to 32
h2_train_2 <- h2_train_2 %>%
filter(days_prior <= 31)
#make this a group
h2_train_3 <- h2_train %>%
mutate(prod_group_cxl_rate = case_when(product_type == 'OPAQUE' ~ 'OP/FENC',
product_type == 'FENCED' ~ 'OP/FENC',
product_type == 'CORPORATE' ~ 'UNF/WHOLE/MEM/GROU/CORP',
product_type == 'BUSINESS TRAVEL AGENCIES' ~ 'BUSINESS TRAVEL AGENCIES',
product_type == 'GROUP' ~ 'UNF/WHOLE/MEM/GROU/CORP',
product_type == 'TACTICAL MARKETING' ~ 'OTH/TACT',
product_type == 'MEMBERSHIP MARKETING' ~ 'UNF/WHOLE/MEM/GROU/CORP',
product_type == 'OTHER' ~ 'OTH/TACT',
product_type == 'UNFENCED' ~ 'UNF/WHOLE/MEM/GROU/CORP',
product_type == 'GOVERNMENT' ~ 'GOVERNMENT',
product_type == 'WHOLESALE' ~ 'UNF/WHOLE/MEM/GROU/CORP'))
#truncate days prior to 32
h2_train_3 <- h2_train_3 %>%
filter(days_prior <= 31)
#look into correlations to prepare for linear regressions
h2_train %>%
select(dow, days_prior, cummulative_cxl_bookings, cummulative_gross_bookings, cummulative_gross_rev, OTB, OTB_rev, OTB_to_be_cxl, month, price)%>%
cor()
#revenue by day of week
h2_train %>%
select(day_of_week, product_type, OTB_rev) %>%
group_by(day_of_week, product_type) %>%
summarise(avg_rev = mean(OTB_rev)) %>%
ggplot(aes(x = reorder(day_of_week, -avg_rev), y = avg_rev, fill = product_type)) +
geom_bar(stat = "identity", width = .8, color = "white", position = "dodge") +
theme_minimal() +
theme(axis.title = element_blank(),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_text(size = 11, face = "bold"),
axis.text.x = element_text(size = 11, face = "bold")) +
ggtitle("Avg Revenues by DOW and product type")
#look into days of week  with revenue and pricing
h1_train %>%
select(OTB, OTB_to_be_cxl, OTB_rev, day_of_week) %>%
group_by(day_of_week) %>%
summarise(avg_bookings = mean(OTB),
avg_cancels = mean(OTB_to_be_cxl),
avg_otb_rev = mean(OTB_rev),
avg_price = mean(OTB_rev)/ mean(OTB)) %>%
arrange(desc(avg_otb_rev)) %>%
kable(align = c("c", "c", "c", "c")) %>%
kable_styling(bootstrap_options = c("striped", "condensed", "bordered")) %>%
column_spec(1:4, color = "#000000")
h1_train %>%
select(OTB, OTB_to_be_cxl, OTB_rev, day_of_week, product_type) %>%
group_by(day_of_week, product_type) %>%
summarise(avg_bookings = mean(OTB),
avg_cancels = mean(OTB_to_be_cxl),
avg_otb_rev = mean(OTB_rev),
avg_price = mean(OTB_rev)/ mean(OTB)) %>%
arrange(desc(avg_price)) %>%
kable(align = c("c", "c", "c", "c")) %>%
kable_styling(bootstrap_options = c("striped", "condensed", "bordered")) %>%
column_spec(1:6, color = "#000000")
h2_train %>%
select(OTB, OTB_to_be_cxl, OTB_rev, day_of_week, product_type) %>%
group_by(day_of_week, product_type) %>%
summarise(avg_bookings = mean(OTB),
avg_cancels = mean(OTB_to_be_cxl),
avg_otb_rev = mean(OTB_rev),
avg_price = mean(OTB_rev)/ mean(OTB)) %>%
arrange(desc(avg_price)) %>%
kable(align = c("c", "c", "c", "c")) %>%
kable_styling(bootstrap_options = c("striped", "condensed", "bordered")) %>%
column_spec(1:6, color = "#000000")
#look into days of week  with revenue and pricing
h2_train %>%
select(OTB, OTB_to_be_cxl, OTB_rev, day_of_week) %>%
group_by(day_of_week) %>%
summarise(avg_bookings = mean(OTB),
avg_cancels = mean(OTB_to_be_cxl),
avg_otb_rev = mean(OTB_rev),
avg_price = mean(OTB_rev)/ mean(OTB)) %>%
arrange(desc(avg_otb_rev)) %>%
kable(align = c("c", "c", "c", "c")) %>%
kable_styling(bootstrap_options = c("striped", "condensed", "bordered")) %>%
column_spec(1:4, color = "#000000")
#look into days of week  with revenue and pricing
h2_train %>%
select(OTB, OTB_to_be_cxl, OTB_rev, day_of_week) %>%
group_by(day_of_week) %>%
summarise(avg_bookings = mean(OTB),
avg_cancels = mean(OTB_to_be_cxl),
avg_otb_rev = mean(OTB_rev),
avg_price = mean(OTB_rev)/ mean(OTB)) %>%
arrange(desc(avg_otb_rev)) %>%
kable(align = c("c", "c", "c", "c")) %>%
kable_styling(bootstrap_options = c("striped", "condensed", "bordered")) %>%
column_spec(1:4, color = "#000000")
h2_train %>%
select(OTB, OTB_to_be_cxl, OTB_rev, day_of_week, product_type) %>%
group_by(day_of_week, product_type) %>%
summarise(avg_bookings = mean(OTB),
avg_cancels = mean(OTB_to_be_cxl),
avg_otb_rev = mean(OTB_rev),
avg_price = mean(OTB_rev)/ mean(OTB)) %>%
arrange(desc(avg_price)) %>%
kable(align = c("c", "c", "c", "c")) %>%
kable_styling(bootstrap_options = c("striped", "condensed", "bordered")) %>%
column_spec(1:6, color = "#000000")
#look into days prior with revenue and pricing
h2_train %>%
select(OTB, OTB_to_be_cxl, OTB_rev, days_prior) %>%
group_by(days_prior) %>%
summarise(avg_bookings = mean(OTB),
avg_cancels = mean(OTB_to_be_cxl),
avg_otb_rev = mean(OTB_rev),
avg_price = mean(OTB_rev)/ mean(OTB)) %>%
arrange(desc(avg_otb_rev)) %>%
kable(align = c("c", "c", "c", "c")) %>%
kable_styling(bootstrap_options = c("striped", "condensed", "bordered")) %>%
column_spec(1:5, color = "#000000")
#add price to h2_train
h2_train <-  h2_train %>%
mutate(price = OTB_rev/OTB)
h2_train %>%
select(days_prior, OTB, OTB_to_be_cxl, OTB_rev) %>%
group_by(days_prior) %>%
summarise(avg_net_rev = mean(OTB_rev),
avg_bookings = mean(OTB),
avg_cxl = mean(OTB_to_be_cxl)) %>%
ggplot() +
geom_line(aes(x = days_prior, y = avg_bookings), color = "red") +
geom_line(aes(x = days_prior, y = avg_cxl), color = "blue") +
theme_minimal() +
theme(axis.title = element_blank(),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_text(size = 11, face = "bold"),
axis.text.x = element_text(size = 11, face = "bold")) +
ggtitle("Bookings & Cancellations by Days Prior")
h2_train %>%
select(days_prior, cummulative_gross_bookings, product_type) %>%
group_by(days_prior, product_type) %>%
summarise(avg_bookings = mean(cummulative_gross_bookings)) %>%
ggplot() +
geom_line(aes(x = days_prior, y = avg_bookings,  color = product_type)) +
theme_minimal() +
theme(axis.title = element_blank(),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_text(size = 11, face = "bold"),
axis.text.x = element_text(size = 11, face = "bold")) +
ggtitle("Cumm Bookings by Product Type and Days Prior")
#How does month affect bookings and cancellations
h2_train$month = month(h2_train$stay_dt)
h2_train %>%
select(month, product_type, OTB) %>%
group_by(month, product_type) %>%
summarise(avg_bookings = mean(OTB)) %>%
ggplot(aes(x = reorder(month, -avg_bookings), y = avg_bookings, fill = product_type)) +
geom_bar(stat = "identity", width = .8, color = "white", position = "dodge") +
theme_minimal() +
theme(axis.title = element_blank(),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_text(size = 11, face = "bold"),
axis.text.x = element_text(size = 11, face = "bold")) +
ggtitle("Average # of Bookings by Month and Product Type")
h2_train %>%
select(month, product_type, OTB_to_be_cxl) %>%
group_by(month, product_type) %>%
summarise(avg_bookings = mean(OTB_to_be_cxl)) %>%
ggplot(aes(x = reorder(month, -avg_bookings), y = avg_bookings, fill = product_type)) +
geom_bar(stat = "identity", width = .8, color = "white", position = "dodge") +
theme_minimal() +
theme(axis.title = element_blank(),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_text(size = 11, face = "bold"),
axis.text.x = element_text(size = 11, face = "bold")) +
ggtitle("Average # of Bookings by Month and Product Type")
h2_train %>%
select(days_prior, daily_gross_bookings, product_type) %>%
group_by(days_prior, product_type) %>%
summarise(avg_bookings = mean(daily_gross_bookings)) %>%
ggplot() +
geom_line(aes(x = days_prior, y = avg_bookings,  color = product_type)) +
theme_minimal() +
theme(axis.title = element_blank(),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_text(size = 11, face = "bold"),
axis.text.x = element_text(size = 11, face = "bold")) +
ggtitle("Bookings by Product Type and Days Prior")
#looking into outliers
group_outlier <- h2_train %>%
filter(product_type == 'GROUP')
group_outlier <- boxplot(group_outlier$daily_gross_bookings)$out
h2_train %>%
select(product_type, days_prior, daily_gross_bookings) %>%
filter(product_type == 'GROUP') %>%
filter(daily_gross_bookings > 200)
corp_outlier <- h2_train %>%
filter(product_type == 'CORPORATE')
corp_outlier <- boxplot(corp_outlier$daily_gross_bookings)$out
h2_train %>%
select(product_type, days_prior, daily_gross_bookings) %>%
filter(product_type == 'CORPORATE') %>%
filter(daily_gross_bookings > 50)
gov_outlier <- h2_train %>%
filter(product_type == 'GOVERNMENT')
gov_outlier <- boxplot(gov_outlier$daily_gross_bookings)$out
h2_train %>%
select(product_type, days_prior, daily_gross_bookings) %>%
filter(product_type == 'GOVERNMENT') %>%
filter(daily_gross_bookings > 10)
unf_outlier <- h2_train %>%
filter(product_type == 'UNFENCED')
unf_outlier <- boxplot(unf_outlier$daily_gross_bookings)$out
h1_train %>%
select(product_type, days_prior, daily_gross_bookings) %>%
filter(product_type == 'UNFENCED') %>%
filter(daily_gross_bookings > 30)
#looking into outliers
group_outlier <- h2_train %>%
filter(product_type == 'GROUP')
group_outlier <- boxplot(group_outlier$daily_gross_bookings)$out
h2_train %>%
select(product_type, days_prior, daily_gross_bookings) %>%
filter(product_type == 'GROUP') %>%
filter(daily_gross_bookings > 200)
corp_outlier <- h2_train %>%
filter(product_type == 'CORPORATE')
corp_outlier <- boxplot(corp_outlier$daily_gross_bookings)$out
h2_train %>%
select(product_type, days_prior, daily_gross_bookings) %>%
filter(product_type == 'CORPORATE') %>%
filter(daily_gross_bookings > 50)
gov_outlier <- h2_train %>%
filter(product_type == 'GOVERNMENT')
gov_outlier <- boxplot(gov_outlier$daily_gross_bookings)$out
h2_train %>%
select(product_type, days_prior, daily_gross_bookings) %>%
filter(product_type == 'GOVERNMENT') %>%
filter(daily_gross_bookings > 10)
unf_outlier <- h2_train %>%
filter(product_type == 'UNFENCED')
unf_outlier <- boxplot(unf_outlier$daily_gross_bookings)$out
h2_train %>%
select(product_type, days_prior, daily_gross_bookings) %>%
filter(product_type == 'UNFENCED') %>%
filter(daily_gross_bookings > 30)
#look into cancellations
h2_train %>%
select(days_prior, daily_cxl_bookings, product_type) %>%
group_by(days_prior, product_type) %>%
summarise(avg_bookings = mean(daily_cxl_bookings)) %>%
ggplot() +
geom_line(aes(x = days_prior, y = avg_bookings, fill = product_type, color = product_type)) +
theme_minimal() +
theme(axis.title = element_blank(),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_text(size = 11, face = "bold"),
axis.text.x = element_text(size = 11, face = "bold")) +
ggtitle("Cancellations by Product Type and Days Prior")
#look into correlations to prepare for linear regressions
h2_train %>%
select(dow, days_prior, cummulative_cxl_bookings, cummulative_gross_bookings, cummulative_gross_rev, OTB, OTB_rev, OTB_to_be_cxl, month, price)%>%
cor()
# Grouping Method 1:
# h2_train_1: prod_group_behav, dow, days_prior, one of (cummulative_gross_bookings,cummulative_gross_rev,cummulative_cxl_bookings,cummulative_cxl_rev,OTB,OTB_rev)
h2_train_1$month <- month(h2_train_1$stay_dt)
mod1 <- lm(OTB_to_be_cxl~days_prior+day_of_week+month+prod_group_behav+cummulative_cxl_bookings, data=h2_train_1)
# Grouping Method 1:
# h2_train_1: prod_group_behav, dow, days_prior, one of (cummulative_gross_bookings,cummulative_gross_rev,cummulative_cxl_bookings,cummulative_cxl_rev,OTB,OTB_rev)
h2_train_1$month <- month(h2_train_1$stay_dt)
mod1 <- lm(OTB_to_be_cxl~days_prior+day_of_week+month+prod_group_perc+cummulative_cxl_bookings, data=h2_train_1)
mod2 <- lm(OTB_to_be_cxl~days_prior+day_of_week+month+prod_group_perc+cummulative_gross_bookings, data=h2_train_1)
mod3 <- lm(OTB_to_be_cxl~days_prior+day_of_week+month+prod_group_perc+cummulative_gross_rev, data=h2_train_1)
mod4 <- lm(OTB_to_be_cxl~days_prior+day_of_week+month+prod_group_perc+OTB, data=h2_train_1)
summary(mod1)
summary(mod2)
summary(mod3)
summary(mod4)
# Grouping Method 1:
# h2_train_1: prod_group_behav, dow, days_prior, one of (cummulative_gross_bookings,cummulative_gross_rev,cummulative_cxl_bookings,cummulative_cxl_rev,OTB,OTB_rev)
h2_train_1$month <- month(h2_train_1$stay_dt)
mod1 <- lm(OTB_to_be_cxl~days_prior+day_of_week+month+prod_group_perc+cummulative_cxl_bookings, data=h2_train_1)
mod2 <- lm(OTB_to_be_cxl~days_prior+day_of_week+month+prod_group_perc+cummulative_gross_bookings, data=h2_train_1)
mod3 <- lm(OTB_to_be_cxl~days_prior+day_of_week+month+prod_group_perc+cummulative_gross_rev, data=h2_train_1)
mod4 <- lm(OTB_to_be_cxl~days_prior+day_of_week+month+prod_group_perc+OTB, data=h2_train_1)
summary(mod1)
summary(mod2)
summary(mod3)
summary(mod4)
# Grouping Method 2:
# h2_train_2: prod_group_behav, dow, days_prior, one of (cummulative_gross_bookings,cummulative_gross_rev,cummulative_cxl_bookings,cummulative_cxl_rev,OTB,OTB_rev)
h2_train_2$month <- month(h2_train_2$stay_dt)
mod1 <- lm(OTB_to_be_cxl~days_prior+day_of_week+month+prod_group_behav+cummulative_cxl_bookings, data=h2_train_2)
mod2 <- lm(OTB_to_be_cxl~days_prior+day_of_week+month+prod_group_behav+cummulative_gross_bookings, data=h2_train_2)
mod3 <- lm(OTB_to_be_cxl~days_prior+day_of_week+month+prod_group_behav+cummulative_gross_rev, data=h2_train_2)
mod4 <- lm(OTB_to_be_cxl~days_prior+day_of_week+month+prod_group_behav+OTB, data=h2_train_2)
summary(mod1)
summary(mod2)
summary(mod3)
summary(mod4)
# Grouping Method 3:
# h2_train_3: prod_group_cxl_rate, dow, days_prior, one of (cummulative_gross_bookings,cummulative_gross_rev,cummulative_cxl_bookings,cummulative_cxl_rev,OTB,OTB_rev)
h2_train_3$month <- month(h2_train_3$stay_dt)
mod1 <- lm(OTB_to_be_cxl~days_prior+day_of_week+month+prod_group_cxl_rate+cummulative_cxl_bookings, data=h2_train_3)
mod2 <- lm(OTB_to_be_cxl~days_prior+day_of_week+month+prod_group_cxl_rate+cummulative_gross_bookings, data=h2_train_3)
mod3 <- lm(OTB_to_be_cxl~days_prior+day_of_week+month+prod_group_cxl_rate+cummulative_gross_rev, data=h2_train_3)
mod4 <- lm(OTB_to_be_cxl~days_prior+day_of_week+month+prod_group_cxl_rate+OTB, data=h2_train_3)
summary(mod1)
summary(mod2)
summary(mod3)
summary(mod4)
